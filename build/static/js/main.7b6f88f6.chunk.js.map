{"version":3,"sources":["utils/history.js","Components/Home/Home.tsx","Components/SideNavBar/SideNavbar2/SideNavbar2.tsx","Components/SideNavBar/SideNavBar.tsx","Components/Search/Item/Item.tsx","Components/Search/Search.tsx","Components/Navbar/Navbar.tsx","utils/constant.js","Components/SignUp/SignUp.tsx","Components/SignIn/SignIn.tsx","Components/Resend/Resend.tsx","Components/Success/Success.tsx","Components/Dashboard/UserAccess/UserAccess.tsx","Components/Dashboard/Profile/Profile.tsx","Components/Dashboard/Speech/Speech.tsx","Components/Dashboard/Dashboard.tsx","Components/PasswordReset/PasswordReset.tsx","Components/PasswordResetConfirm/PasswordResetConfirm.tsx","Components/Routes/Routes.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/message.svg","assets/images/short_text.svg","assets/images/search-large.svg","assets/images/remove_red_eye.svg","assets/images/offline_pin.svg","assets/images/arrow_back.svg","assets/images/Ei-heart.svg","assets/images/hamburger.svg"],"names":["createBrowserHistory","Home","state","email","cookiesAgreed","goToSignUp","history","push","pathname","AOS","init","duration","user","localStorage","getItem","JSON","parse","token","id","className","data-aos","to","aria-hidden","concat","this","onClick","setState","data-aos-offset","data-aos-easing","src","ShortTextLogo","EyeLogo","SearchLogo","OfflineLogo","type","onChange","e","target","value","placeholder","bind","ArrowBackLogo","HeartLogo","href","React","Component","SideNavBar2","showNav","openNavClick","preventDefault","openNav","closeNavClick","closeNav","document","addEventListener","handleEscKey","removeEventListener","key","sideNavStyle","width","Fragment","style","SideNavBar","opacity","Hambuger","borderTop","bottom","Item","isOpened","name","phoneNumber","handleOpen","props","image","height","ITEMS","phone","adress","ItemList","displayedItems","handleSearch","event","searchQuery","toLowerCase","filter","el","indexOf","action","aria-describedby","map","Navbar","isSignUp","isSignIn","signUpHandler","signUpNavBar","signInNavBar","nextProps","HeaderLogo","isRightBar","Search","baseUrl","registerURL","loginURL","passwordResetUrl","confirmCodeUrl","resendCodeUrl","logoutUrl","deleteAccountUrl","secuirtyQuestionUrl","closeContactsUrl","updateProfileUrl","addRetrieveSpeechUrl","override","css","SignUp","isResend","password1","password2","tosChecked","isValidated","isSuccess","formSubmitted","errors","password","submitForm","flag","validateForm","that","axios","post","url","then","response","setTimeout","catch","error","form_errors","data","finally","location","size","color","loading","onSubmit","TextField","label","variant","checked","success","title","onConfirm","onCancel","showConfirm","show","SignIn","loginError","setItem","stringify","Resend","code","successText","submitCode","console","log","resendCode","obj","Success","UserAccess","email1","email2","email3","successMsg","errorMsg","btnText","retrieveEmails","config","headers","Authorization","get","results","length","addCloseContacts","bodyParameters","monthMap","dateConfig","format","getMonth","caption","step","Profile","inputOpenFileRef","createRef","dob","isCalenderOpen","time","Date","old_password","new_password1","new_password2","profile_picture","file","isPasswodChange","retrieveProfileInfo","img","moment","checkValue","updateProfile","formData","FormData","append","updatePassword","handleClick","handleCancel","handleSelect","date","handleImageChange","URL","createObjectURL","files","ref","current","click","onFocus","headerFormat","showHeader","cancelText","confirmText","isOpen","onSelect","Speech","interval","speech","retrieveSpeech","text","addSpeech","patch","setInterval","clearInterval","rows","Dashboard","activeTab","activeBottomTab","question","answer","showAnswerInput","msg","questionsList","toggleActiveTab","tab","retrieveSequrityQuestion","toggleBottomTabsHandler","tabName","toggleCollapse","item","showAnswer","addSecurityQuestion","logout","removeItem","deleteAccount","delete","i","Collapse","Card","CardBody","minWidth","PasswordReset","PasswordResetConfirm","uid","params","URLSearchParams","search","toString","ReactGA","initialize","pageview","window","Routes","useState","setIsSignUp","setIsSignIn","setIsRightBar","exact","path","render","loggedIn","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7b6f88f6.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from 'react';\nimport './home.scss';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport ShortTextLogo from '../../assets/images/short_text.svg';\nimport SearchLogo from '../../assets/images/search-large.svg';\nimport EyeLogo from '../../assets/images/remove_red_eye.svg';\nimport OfflineLogo from '../../assets/images/offline_pin.svg';\nimport ArrowBackLogo from '../../assets/images/arrow_back.svg';\nimport HeartLogo from '../../assets/images/Ei-heart.svg';\nimport { Link } from 'react-router-dom';\nimport history from '../../utils/history';\n\n\ninterface HomeProps {\n\n}\ninterface HomeState {\n    email:string,\n    cookiesAgreed:boolean,\n}\n\nclass Home extends React.Component<HomeProps, HomeState> {\n    state = {\n        email:'',\n        cookiesAgreed:false,\n    }\n    componentDidMount() {\n        AOS.init({\n            // initialise with other settings\n            duration: 500\n        });\n    }\n\n    goToSignUp = () =>{\n        history.push({\n            pathname : '/signup',\n            state: { email: this.state.email }\n        })\n    }\n\n    render() {\n        let user = localStorage.getItem('user');\n        user = user && JSON.parse(user);\n        let token = localStorage.getItem('userToken');\n        return (\n            <div id=\"home\">\n                <div className=\"banner-section container d-flex justify-content-center mb-0\">\n                    <div className=\"text-left custom-banner\">\n                        <h1 className=\"mt-5\" data-aos=\"fade-up\" >It’s your<br /> Funeral</h1>\n                        <p className=\"d-flex m-auto pb-4 pt-4 text-left text-light\">Funerals are sad times, especially when it’s your own.<br /> Take a few moments to Write your last speech now.</p>\n                        {token!=\"\" && user ? '':  \n                        <button className=\"btn btn-custom d-flex justify-content-center align-items-center\">\n                              <Link to=\"/signup\">Create a Free Account</Link>\n                            <i className=\"pl-2 fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                        </button>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"container-fluid\">\n                    <div className=\"row background-images\">\n                        <div className=\"col-12 col-md-6 left-section position-relative\">\n                            <div className=\"col-3 first-div\"></div>\n                            <div className=\"col-3 second-div\"></div>\n                        </div>\n                        <div className={\"align-items-baseline cookies-popup  justify-content-center py-2 \".concat(this.state.cookiesAgreed ? \"d-none\": \"d-flex\" )}>\n                            <p className=\"mb-0 ml-3 mr-4\">\n                                 Our site uses Cookies. <a>Learn more </a>\n                            </p>\n                             <button onClick = {()=>{this.setState({cookiesAgreed:true})}} className=\"btn btn-custom d-flex justify-content-center align-items-center\">\n                                Got it                          \n                            </button>\n                        </div>\n                        <div className=\"col-12 col-md-6 right-section p-0\">\n                            <div className=\"right-img position-relative\"></div>\n                        </div>\n                    </div>\n                    <div className=\"container work-section\">\n                        <div className=\"row\">\n                            <div className=\"col-12 d-flex justify-content-center ml-md-4\">\n                                <div className=\"col-2 hidden-mobile\"></div>\n                                <div className=\"col-12 col-md-4 card-custom\" data-aos=\"zoom-in\">\n                                    <div className=\"card-section\">\n                                        <h2>How it works…</h2>\n                                        <p>My last speech allows you to write your<br /> own speech at your funeral that can be<br />unlocked by your loved ones when you<br /> pass.</p>\n                                    </div>\n\n                                </div>\n                                <div className=\"col-3 hidden-mobile\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div className=\"container-fluid sidebar-image position-relative\" data-aos=\"fade-right\"\n                    data-aos-offset=\"300\"\n                    data-aos-easing=\"ease-in-sine\">\n                    <div className=\"container side-by-side pt-5\">\n                        <div className=\"row d-flex align-items-center\">\n                            <div className=\"col-12 col-md-6 col-lg-6\">\n                                <div className=\"d-flex justify-content-around list-section\" data-aos=\"fade-left\">\n                                    <img src={ShortTextLogo} />\n                                    <p >You log in and write your last<br />speech, you can even link your <br />favourite song</p>\n                                </div>\n                                <div className=\"d-flex justify-content-around list-section\" data-aos=\"fade-right\" >\n                                    <img src={EyeLogo} />\n                                    <p>We save them and encrypt them.<br /> You can come back anytime to<br /> update or make amendments as<br /> life goes on.</p>\n                                </div>\n                                <div className=\"image-section-mobile\" data-aos=\"fade-right\"\n                                    data-aos-offset=\"300\"\n                                    data-aos-easing=\"ease-in-sine\">\n                                </div>\n                                <div className=\"d-flex justify-content-around list-section\" data-aos=\"fade-left\">\n                                    <img src={SearchLogo} />\n                                    <p>When you’re gone, we notify your<br /> loved ones about your saved speech <br />and grant them access</p>\n                                </div>\n                                <div className=\"d-flex justify-content-around list-section\" data-aos=\"fade-right\">\n                                    <img src={OfflineLogo} />\n                                    <p>It’s your last chance to tell your <br />friends and family everything<br /> you wanted to but didn’t, Crack a <br />joke or just say thanks for being <br />there…</p>\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-6 col-lg-6\">\n                                <div className=\"image-section\" data-aos=\"fade-right\"\n                                    data-aos-offset=\"300\"\n                                    data-aos-easing=\"ease-in-sine\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"align-items-center container-fluid custom-upper d-flex\" data-aos=\"zoom-in-up\">\n                    <div className=\"container upper-footer\">\n                        <div className=\"d-flex justify-content-around pl-5 row custom-upper-footer\">\n                            <div className=\"col-12 col-md-9\">\n                                <div className=\"col-12 ml-3 newsletter p-5 position-relative\" data-aos=\"zoom-out-up\">\n                                    <h2 >Create your last speech now</h2>\n                                    <p >Nobody knows when our time is up, and all the things you wanted to <br />\n                                        do or say could be lost forever, don’t let that happen, write a few words<br />\n                                        now, and spread some love on your final day</p>\n                                    <div className=\"email-box position-relative\">\n                                        <input type=\"text\" \n                                        className=\"email-box__input\" \n                                        onChange = {(e)=>{this.setState({email:e.target.value})}}\n                                        placeholder=\"Enter Email Address\" \n                                        value = {this.state.email}/>\n                                        <button type=\"button\" \n                                        onClick = {this.goToSignUp.bind(this)}\n                                        className=\"d-flex email-box__button\">\n                                            <img src={ArrowBackLogo} />\n                                        </button>\n                                    </div>\n                                    <div className=\"right-fixed\" data-aos=\"zoom-out-down\">\n                                        <img src={HeartLogo} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"container footer p-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"footer-list\">\n                                <ul className=\"d-flex mb-0\">\n                                    <li><a href=\"#\"> Legal</a></li>\n                                    <li><a href=\"#\">Contact us</a></li>\n                                    <li><a href=\"#\">About</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"align-items-baseline copyright-section d-flex justify-content-end\">\n                                <h5>My Last Speech…</h5>\n                                <p>Company info TBC TM tbc</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./sidenavbar2.scss\";\nimport Hambuger from '../../assets/images/hamburger.svg';\n\nclass SideNavBar2 extends React.Component {\n  state = {\n    state: {\n      showNav: false\n    }\n  }\n\n  openNavClick = (e:any) => {\n    e.preventDefault()\n    this.openNav()\n  }\n\n  closeNavClick = (e:any)  => {\n    e.preventDefault()\n    this.closeNav()\n  }\n\n  openNav = () => {\n    this.setState({\n      showNav: true\n    })\n\n    document.addEventListener(\"keydown\", this.handleEscKey)\n  }\n  closeNav = () => {\n    this.setState({\n      showNav: false\n    })\n\n    document.removeEventListener(\"keydown\", this.handleEscKey)\n  }\n\n  handleEscKey = (e:any)  => {\n    if (e.key === \"Escape\") {\n      this.closeNav()\n    }\n  }\n\n  render() {\n    const { showNav }:any = this.state\n    let sideNavStyle = { width: showNav ? \"460px\" : \"0\" }\n\n    return (\n      <div id=\"sideNavBar2\">\n      <React.Fragment>\n        <span onClick={this.openNavClick} className=\"open-nav\">\n          <i className=\"fa fa-question-circle question-mark\" aria-hidden=\"true\"></i>\n        </span>\n        {/* <div\n          onClick={this.navCoverClick}\n          class=\"nav-cover\"\n          style={navCoverStyle}\n        /> */}\n        <div className={\"side-nav \".concat(showNav?\"spacing\":\"\")} style={sideNavStyle}>\n          <a href=\"#\" onClick={this.closeNavClick} className=\"close-nav\">\n            &times;\n          </a>\n          <span className={\"heading \".concat(showNav?\"d-block\":\"d-none\")}>Writing Tips</span>\n          <div className={\"text pt-4 \".concat(showNav?\"d-block\":\"d-none\")}>\n            <p>\n            Talk about your friends, and maybe a fun story about when you were growing up. Keep it clean though. \n            </p>\n            \n            <p>\n            Talk about the most fun you ever had. \n            </p>\n          \n            <p>\n            Tell people what your best achievement was and give them some advice you learned from life. \n            </p>\n\n            <p>\n            Tell everyone you love them \n            </p>\n\n            <p>\n             Say thanks for coming, they are all here for you after all.\n            </p>\n\n            <p>\n            Crack a joke, it’s a sad time, but not for you. \n            </p>\n\n            <p>\n            Say something to someone you always wanted to say and maybe didn’t get the chance to.\n            </p>\n\n            <p>\n            Keep it light, Its a pretty sombre time for everybody remind them of who you were and your personality. \n            </p>\n\n            <p>\n            Tell everyone, or someone, to go and do something in your honour, any last wishes, nows the time. \n            </p>\n\n            <p>\n            This is the last time they will ever get to hear. Your words in most cases, so finish with a bang.\n            </p>\n\n            <p>\n            Remember not to add add personal or account information here.\n            </p>\n           </div>\n        </div>\n      </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default SideNavBar2;\n","import React from \"react\";\nimport \"./sidenavbar.scss\";\nimport Hambuger from '../../assets/images/hamburger.svg';\nimport { Link } from 'react-router-dom';\n\n\nclass SideNavBar extends React.Component {\n  state = {\n    state: {\n      showNav: false\n    }\n  }\n\n  openNavClick = (e:any) => {\n    e.preventDefault()\n    this.openNav()\n  }\n\n  closeNavClick = (e:any)  => {\n    e.preventDefault()\n    this.closeNav()\n  }\n\n  openNav = () => {\n    this.setState({\n      showNav: true\n    })\n\n    document.addEventListener(\"keydown\", this.handleEscKey)\n  }\n  closeNav = () => {\n    this.setState({\n      showNav: false\n    })\n\n    document.removeEventListener(\"keydown\", this.handleEscKey)\n  }\n\n  handleEscKey = (e:any)  => {\n    if (e.key === \"Escape\") {\n      this.closeNav()\n    }\n  }\n\n  render() {\n    const { showNav } :any= this.state\n    let navCoverStyle = { width: showNav ? \"100%\" : \"0\" }\n    let sideNavStyle = { opacity: showNav ? \"1\" : \"0\" }\n\n    return (\n      <div id=\"side-navbar1\">\n        {!showNav && \n          <span onClick={this.openNavClick} className=\"open-nav\">\n          <img src = {Hambuger}></img>\n          </span>\n        } \n          <div className={\"side-nav hamburger-icon d-flex \".concat( showNav && \"visible\")} style={sideNavStyle}> \n              \n              <div  className=\"first-section\"></div>\n              <div className=\"second-section\">\n                <a href=\"#\" onClick={this.closeNavClick} className=\"close-nav\">\n                    &times;\n                  </a>\n                  <div>\n                      <Link className=\"link-design\" to=\"/signup\">Sign up </Link>\n                      <Link className=\"link-design\" style={{borderTop:0}} to=\"/signin\">Login</Link>\n\n                  </div>\n                  <div className=\"position-absolute\" style={{bottom:0}}>\n                      <Link to=\"/signup\">Contact Us </Link>\n                      <Link to=\"/signin\">Legal</Link>\n                  </div>                 \n              </div>\n             <div>\n\n             </div>\n            \n          </div>\n    \n      </div>\n    )\n  }\n}\n\nexport default SideNavBar;\n","import React from 'react';\n\ninterface ItemProps {\n    name: string,\n    image: any,\n}\ninterface ItemState {\n    isOpened:boolean,\n }\n\n\nclass Item extends React.Component<ItemProps, ItemState> {\n    state = {\n        isOpened:false,\n        name:\"\",\n        phoneNumber:\"\",\n    }\n    handleOpen(){\n        if(this.state.isOpened == true)\n        {\n          this.setState({\n            isOpened:false\n          });\n        }else{\n          this.setState({\n            isOpened:true\n          });\n        }\n      }\n      render(){\n        if(this.state.isOpened == true){\n          return (\n              <li className=\"item\" onClick={this.handleOpen}>\n                  <img className=\"item-image\" src={this.props.image} width=\"60px\" height=\"60px\" />\n                  <div className=\"item-info\">\n                      <div className=\"item-name\"> {this.props.name} </div>\n                  </div>\n              </li>\n          );\n        } else {\n          return (\n              <li className=\"item\" onClick={this.handleOpen}>\n                  <img className=\"item-image\" src={this.props.image} width=\"60px\" height=\"60px\" />\n                  <div className=\"item-info\">\n                  <div className=\"item-name ml-4\"> {this.props.name} </div>\n                  </div>\n              </li>\n          );\n        }\n\n      }\n}\nexport default Item;","import React from 'react';\nimport './search.scss';\nimport Item from './Item/Item';\n\ninterface ItemListProps {}\ninterface ItemListState {\n    displayedItems: Array<Object>,\n}\n\nvar ITEMS=[\n    {\n      id:1,\n      name: 'Geralt',\n      image: 'https://i.pinimg.com/736x/34/42/d7/3442d7bda02f7ca7bf0566304c0c939a.jpg',\n      phone: '+41242341287',\n      email: 'geraltfromrivia@morhen.kaed',\n      adress: \"Kaer Morhen, Kaedwen\"\n    },\n    {\n      id:2,\n      name: 'Dandelion',\n      image: 'http://i.playground.ru/i/98/19/20/00/wiki/content/y1rqpmxj.250xauto.png',\n      phone: '+46785412354',\n      email: 'thegreatestpoet@chameleon.red',\n      adress: \"Cabaret 'Chameleon', Novigrad, Redania\"\n    },\n    {\n      id:3,\n      name: 'Yennefer',\n      image: 'https://vignette2.wikia.nocookie.net/vedmak/images/c/cd/%D0%99%D0%B5%D0%BD%D0%BD%D0%B8%D1%84%D1%8D%D1%80%D0%923.png/revision/latest/scale-to-width-down/350?cb=20160414164624',\n      phone: '+28675674329',\n      email: 'yen.ven@aretuza.taned',\n      adress: \"Vengerberg, Aedirn\"\n    },\n   \n]\n\nclass ItemList extends React.Component<ItemListProps, ItemListState> {\n    state = {\n      displayedItems: ITEMS\n    }\n\n    handleSearch =(event:any)=>{\n        var searchQuery = event.target.value.toLowerCase();\n        var displayedItems = ITEMS.filter(function(el) {\n            var searchValue = el.name.toLowerCase();\n            return searchValue.indexOf(searchQuery) !== -1;\n        });\n\n        this.setState({\n          displayedItems: displayedItems\n        });\n    }\n\n\n    render() {\n        return (\n            <div  id=\"search\">\n              <div className=\"items\" >               \n                <form action=\"#\" className=\"ml-5\">\n                    <div className=\"input-group rounded-pill  form-inner\">\n                        <div className=\"input-group-prepend border-0\">\n                            <button id=\"button-addon4\" type=\"button\" className=\"btn btn-link text-info\"><i className=\"fa fa-search\"></i></button>\n                        </div>\n                        <input type=\"search\"  onChange={this.handleSearch.bind(this)}  placeholder=\"Search\" aria-describedby=\"button-addon4\" className=\"form-control bg-none border-0 custom-input\" />\n                        \n                    </div>\n                </form>\n                {/* <div className={\"after-section \"}></div> */}\n                <ul className=\"items-list d-none\">\n                    {\n                       this.state.displayedItems.map(function(el) {\n                           return <Item\n                               key={el.id}\n                               name={el.name}\n                               image={el.image}\n                           />;\n                       })\n                    }\n                </ul>\n              </div> \n            </div>\n           );\n    }\n};\n\nexport default ItemList;","import React from 'react';\nimport './navbar.scss';\nimport HeaderLogo from '../../assets/images/message.svg';\nimport SideNavBar2 from '../SideNavBar/SideNavbar2/SideNavbar2';\nimport SideNavBar from '../SideNavBar/SideNavBar';\nimport { Link } from 'react-router-dom';\nimport Search from '../Search/Search';\n\ninterface NavbarProps {\n    signUpNavBar:boolean,\n    signInNavBar:boolean,\n    isRightBar:boolean,\n}\ninterface NavbarState {\n    isSignUp:boolean,\n    isSignIn:boolean,\n}\n\n\n\nclass Navbar extends React.Component<NavbarProps, NavbarState> {\n\n    state = {\n        isSignUp:false,\n        isSignIn:false,\n    }\n\n    componentDidMount(){\n        this.setState({\n            isSignUp:this.props.signUpNavBar,\n            isSignIn:this.props.signInNavBar\n        });\n    }\n    componentWillReceiveProps(nextProps:any){\n        this.setState({\n            isSignUp:nextProps.signUpNavBar,\n            isSignIn:nextProps.signInNavBar\n        });\n    }\n\n    signUpHandler = (e:any) =>{\n        this.setState({\n            isSignUp:true,\n        });\n    }\n\n    render() {\n        let user = localStorage.getItem('user');\n        user = user && JSON.parse(user);\n        let token = localStorage.getItem('userToken');\n        return (\n                !this.state.isSignUp && !this.state.isSignIn?\n                    <nav className=\"navbar navbar-dark navbar-expand-md pl-0 pt-0 fixed-top\">\n                        <div className=\"container-fluid p-0\">\n                            <div className=\"form-search d-flex align-items-center justify-content-center \" >\n                                <Link to=\"/\" >\n                                    <img src={HeaderLogo}/>\n                                </Link>  \n                                {/* <form action=\"#\" className=\"ml-5\">\n                                    <div className=\"input-group rounded-pill  form-inner\">\n                                        <div className=\"input-group-prepend border-0\">\n                                            <button id=\"button-addon4\" type=\"button\" className=\"btn btn-link text-info\"><i className=\"fa fa-search\"></i></button>\n                                        </div>\n                                        <input type=\"search\" placeholder=\"Search\" aria-describedby=\"button-addon4\" className=\"form-control bg-none border-0 custom-input\" />\n                                      \n                                    </div>\n                                </form> */}\n                                <Search/>\n                           \n                            </div>\n                            <li className=\"nav-item hamburger-icon d-none\">\n                                <SideNavBar/>\n                            </li>\n                            <div className=\"collapse navbar-collapse item-navbar justify-content-end\" id=\"navbarsExampleDefault\">\n                               {token!=\"\" && user ? \n                               <Link to=\"/dashboard\">\n                                    <img style={{width:\"50px\"}} src = {user['profile_picture']}/>\n                               </Link>\n                               :\n                                 <ul className=\"navbar-nav ml-auto mr-5\">\n                                    <li className=\"mr-5 nav-item \">\n                                        <Link to = \"/signup\"  className=\"nav-link\">Sign up </Link>\n                                    </li>\n                                    <li className=\"ml-3 nav-item\">\n                                        <Link to = \"/signin\" className=\"nav-link\" >login</Link>\n                                    </li>\n                                </ul>\n                               }\n                              \n                            </div>\n                        </div>\n                        \n                    </nav>  \n                    \n                :\n                    <nav className=\"navbar navbar-dark navbar-expand-md pl-0 pt-0\">\n                        <div className=\"container-fluid p-0\">\n                            <div className=\"form-search-login d-flex align-items-center justify-content-center fixed-top\" >\n                                <Link to=\"/\">\n                                    <img src={HeaderLogo}/>\n                                </Link>                          \n                            </div>\n                            {!this.state.isSignUp && this.state.isSignIn?\n                                <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                                    <ul className=\"navbar-nav ml-auto mr-5 mt-5\">\n                                        <li className=\"nav-item \">\n                                            <Link to = \"/signup\" className=\"nav-link\" href=\"signup.html\">Don’t have an account? &nbsp;&nbsp; <span>Sign up</span> </Link>\n                                        </li>\n                                    </ul>\n                                </div>\n                                :this.state.isSignUp && !this.state.isSignIn?\n                                <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                                    <ul className=\"navbar-nav ml-auto mr-5 mt-5\">\n                                        <li className=\"nav-item \">\n                                            <Link to = \"/signin\"  className=\"nav-link\" href=\"login.html\">Already have an account? &nbsp; &nbsp;<span>Login</span> </Link>\n                                        </li>\n                                    </ul>\n                                </div>\n                                :\n                                this.state.isSignUp && this.state.isSignIn && this.props.isRightBar ?\n                                <div className=\"collapse navbar-collapse user-dash\" id=\"navbarsExampleDefault\">\n                                    <ul className=\"navbar-nav ml-auto mr-5 mt-3\">\n                                        <li className=\"nav-item \">\n                                             <SideNavBar2/>\n                                        </li>\n                                    </ul>\n                                </div>\n                              :null\n                            }\n                        </div>\n                    </nav>\n                \n        );\n    }\n}\n\n\nexport default Navbar;\n\n","// BASE URL\n//   export const baseUrl = \"http://127.0.0.1:8000/\";\n export const baseUrl = \"http://api.mylastspeech.com/\";\n //export const baseUrl = \"http://13.58.231.218/\";\n\nexport const registerURL = baseUrl + \"api/v1/auth/registration/\";\nexport const loginURL = baseUrl + \"api/v1/auth/custom-login/\";\nexport const passwordResetUrl = baseUrl + \"api/v1/auth/password/reset/\";\nexport const passwordResetConfirmUrl = baseUrl + \"api/v1/auth/password/reset/confirm/\";\n\nexport const confirmCodeUrl = baseUrl + \"api/v1/auth/registration/verify-email/\";\nexport const resendCodeUrl = baseUrl + \"api/v1/auth/send-confirmation-email/\";\nexport const passwordChangeUrl = baseUrl + \"api/v1/auth/password/change/\";\nexport const logoutUrl = baseUrl + \"api/v1/auth/logout/\";\nexport const deleteAccountUrl = baseUrl + \"api/v1/delete-account/\";\n\nexport const secuirtyQuestionUrl = baseUrl + \"api/v1/security-questions/\";\nexport const closeContactsUrl = baseUrl + \"api/v1/close-contacts/\";\nexport const updateProfileUrl = baseUrl + \"api/v1/update-profile/\";\nexport const addRetrieveSpeechUrl = baseUrl + \"api/v1/speech/\";\n\n\n\n\n\n\n","import React from 'react';\nimport './signup.scss';\nimport history from '../../utils/history';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport TextField from '@material-ui/core/TextField';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\n\n\nimport * as url from '../../utils/constant';\n\ninterface SignUpProps {\n    location?:any,\n}\n\ninterface SignUpState {\n    isResend:boolean,\n    name:string,\n    email:string,\n    password1:string,\n    password2:string,\n    tosChecked:boolean,\n    isValidated: boolean,\n    isSuccess:boolean,\n    formSubmitted:boolean,\n    errors:object,\n}\n\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\nclass SignUp extends React.Component<SignUpProps, SignUpState> {\n\n    state = {\n        isResend:false,\n        name:\"\",\n        email:\"\",\n        password1:\"\",\n        password2:\"\",\n        tosChecked:false,\n        isValidated:true,\n        isSuccess:false,\n        formSubmitted:false,\n        errors: {\n            email: '',\n            password: '',\n          }\n    }\n\n    componentDidMount(){\n        this.setState({\n            email:this.props?.location?.state?.email,\n        });\n    }\n    \n    validateForm():boolean{ \n        if(this.state.name && this.state.password1 && this.state.password2 && this.state.email && this.state.tosChecked){\n          return true;\n        }\n        return false;\n    }\n    \n    submitForm = (e:any) => {\n        e.preventDefault();\n        let flag = this.validateForm();\n        this.setState({\n            isValidated:flag,\n            formSubmitted:true,\n        })\n        if(flag){\n           let that = this;\n            axios.post(url.registerURL, {\n                name:this.state.name,\n                password1:this.state.password1,\n                password2:this.state.password2,\n                email:this.state.email,\n              })\n              .then( (response) =>{\n                that.setState({\n                    isSuccess:true,\n                    errors:{},\n                    formSubmitted:false,\n                });\n                setTimeout(() => {\n                    that.setState({\n                        isSuccess:false,\n                    });\n                    history.push({\n                        pathname: '/resend',\n                        state: { email: that.state.email }\n                     });\n                }, 2500);\n              })\n              .catch( (error)=> {\n                  let form_errors = {\n                      email:error.response?.data['email'],\n                      password:error.response?.data['password1'],\n                  }\n                  that.setState({\n                      errors:form_errors,\n                      formSubmitted:false,\n                  });\n              })\n              .finally( () => {\n                // always executed\n              });           \n        }else{\n            this.setState({\n                formSubmitted:false,\n            });\n        }\n  \n    }\n    \n    render() {\n     \n        return (\n            <div>\n                <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n                    <ClipLoader\n                    css={override}\n                    size={150}\n                    //size={\"150px\"} this also works\n                    color={\"#123abc\"}\n                    loading={this.state.formSubmitted}\n                />\n                </div>\n                <div className={\"container-fluid login-container sign-up \".concat(this.state.formSubmitted?\"screen-overlay\":\"\")}>\n                    <div className=\"row background-images\">\n                            <div className=\"col-12 col-md-6 left-section position-relative\">\n                                <div className=\"col-3 first-div\"></div>\n                                <div className=\"col-3 second-div\"></div>\n                            </div>\n                            <div className=\"col-12 col-md-6 right-section p-0 position-relative\">\n                            <div className=\"col-3 third-div\"></div>\n                                <div className=\"col-3 fourth-div\"></div>\n                            </div>\n                        </div>\n                \n                    <div className=\"align-items-center d-flex justify-content-center row custom-login signup-dialog\">\n                        <div className=\" col-lg-6 col-12  login-form\">\n                            <form   onSubmit={this.submitForm.bind(this)}>\n                                <div className={\"form-group mt-4 \".concat(!this.state.isValidated && this.state.name ===\"\" ? 'validate':'' )}>\n                                    <TextField \n                                        onChange={(event) => {this.setState({name: event.target.value});}}\n                                        value = {this.state.name} \n                                        className = 'outlined-input-custom' \n                                        label=\"Enter Your Name\" \n                                        variant=\"outlined\" \n                                    />\n                                </div>\n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.email ===\"\" ? 'validate':'' )}>\n                                     <TextField \n                                        onChange={(event) => {this.setState({email: event.target.value});}}\n                                        value = {this.state.email} \n                                        className = 'outlined-input-custom' \n                                        label=\"Email\" \n                                        type=\"email\"\n                                        variant=\"outlined\" \n                                    />\n                                    <span className=\"error ml-1\">{this.state.errors?.email && this.state.errors?.email[0]}</span>\n                                </div>\n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.password1 ===\"\" ? 'validate':'' )}>\n                                    <TextField \n                                        onChange={(event) => {this.setState({password1: event.target.value});}}\n                                        value = {this.state.password1} \n                                        className = 'outlined-input-custom' \n                                        label=\"Password\" \n                                        type=\"password\"\n                                        variant=\"outlined\" \n                                    />\n                                </div>\n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.password2 ===\"\" ? 'validate':'' )}>\n                                    <TextField \n                                        onChange={(event) => {this.setState({password2: event.target.value});}}\n                                        value = {this.state.password2} \n                                        className = 'outlined-input-custom' \n                                        label=\"Repeat Password\" \n                                        type=\"password\"\n                                        variant=\"outlined\" \n                                    />\n                                    <span className=\"error ml-1\">{this.state.errors?.password && this.state.errors?.password[0]}</span>\n                                </div>\n                                <div className={\"d-flex align-items-center form-group mt-3 pb-4 form-field \".concat(!this.state.isValidated && !this.state.tosChecked  ? 'validate':'' )}>\n                                    <span onClick={(event) => { this.setState({tosChecked: !this.state.tosChecked});}} >\n                                        <input type=\"checkbox\" checked={this.state.tosChecked} />\n                                        <span className=\"checkmark\"></span>\n                                    </span>\n                                    \n                                    <span className=\"pl-2\"> I agree to\n                                        <a href=\"#\"> privacy policy</a> and <a href=\"#\">terms of service</a><br/>\n                                    </span>\n                                    <SweetAlert\n                                        success\n                                        title=\"Successfully Registered!\"\n                                        onConfirm={()=>{}}\n                                        onCancel={()=>{}}\n                                        showConfirm = {false}\n                                        show = {this.state.isSuccess}\n                                        >\n                                        \n                                    </SweetAlert>\n                                </div>\n                                <div className=\"form-group custom-submit\">\n                                    <button className=\"btn btnSubmit\" type=\"submit\"> <i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </form>\n                    </div>\n                </div>\n                        \n                </div>             \n            </div> \n        );\n    }\n}\n\nexport default SignUp;\n\n","import React from 'react';\nimport history from '../../utils/history';\nimport axios from 'axios';\nimport * as url from '../../utils/constant';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\nimport TextField from '@material-ui/core/TextField';\n\nimport './signin.scss';\nimport { Link } from 'react-router-dom';\n\n\n// const trackingId = \"UA-158954661-1\"; // Replace with your Google Analytics tracking ID\n\n\ninterface SignInProps {\n\n}\ninterface SignInState {\n    email:string,\n    password:string,\n    isValidated: boolean,\n    isSuccess:boolean,\n    errors:object,\n    formSubmitted:boolean,\n}\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\nclass SignIn extends React.Component<SignInProps, SignInState> {\n   \n    state = {\n        email:\"\",\n        password:\"\",\n        isValidated:true,\n        isSuccess:false,\n        formSubmitted:false,\n        errors: {\n            loginError: '',\n          }\n    }\n\n    validateForm():boolean{ \n        if(this.state.password && this.state.email){\n          return true;\n        }\n        return false;\n    }\n    \n    submitForm = (e:any) => {\n        debugger;\n        e.preventDefault();\n        let flag = this.validateForm();\n        this.setState({\n            isValidated:flag,\n            formSubmitted:true,\n        });\n        if(flag){\n           let that = this;\n            axios.post(url.loginURL, {\n                email:this.state.email,\n                password:this.state.password,\n              })\n              .then((response) => {\n                  debugger;\n                that.setState({\n                    isSuccess:true,\n                    formSubmitted:false,\n                    errors:{},\n                });\n                that.setState({\n                    isSuccess:false,\n                });\n                localStorage.setItem('userToken',response.data.key);\n                localStorage.setItem('user',JSON.stringify(response.data.user))\n                // ReactGA.set({\n                //     userId: response.data.key\n                // });\n                history.push(\"/success\");   \n              })\n              .catch((error) => {\n                debugger;\n                  let form_errors = {};   \n                  if(error.response?.data['email'] === \"E-mail is not verified.\"){\n                    history.push({\n                        pathname: '/resend',\n                        state: { email: that.state.email }\n                     });\n                  }\n                  if(error.response?.data['email'] && error.response?.data['email'][0] === \"Enter a valid email address.\"){\n                      form_errors = {\n                        loginError:error.response?.data['email'],\n                      }\n                  }else{\n                    form_errors = {\n                        loginError:error.response?.data['login-error'],\n                    }      \n                  }\n\n                  that.setState({\n                      errors:form_errors,\n                      formSubmitted:false,\n                  });\n              })\n              .finally( () => {\n                // always executed\n              });           \n        }else{\n            let loginError:any = [];\n            loginError[0] = \"Please Enter all required field\";\n            let form_errors = {\n                loginError:loginError\n            }\n            this.setState({\n                errors:form_errors,\n                formSubmitted:false,\n            })\n        }\n  \n    }\n    \n    render() {\n        return (    \n            <div>\n                <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n                    <ClipLoader\n                    css={override}\n                    size={150}\n                    //size={\"150px\"} this also works\n                    color={\"#123abc\"}\n                    loading={this.state.formSubmitted}\n                   />\n                </div>\n                <div id= \"login-container\" className={\"container-fluid login-container login-form \".concat(this.state.formSubmitted?\"screen-overlay\":\"\")}>             \n                    <div className=\"row background-images\">\n                            <div className=\"col-12 col-md-6 left-section-login position-relative\">\n                                <div className=\"col-3 first-div\"></div>\n                                <div className=\"col-3 second-div\"></div>\n                            </div>\n                            <div className=\"col-12 col-md-6 right-section-login p-0 position-relative\">\n                            <div className=\"col-3 third-div\"></div>\n                                <div className=\"col-3 fourth-div\"></div>\n                            </div>\n                        </div>\n                \n                    <div className=\"align-items-center d-flex justify-content-center row custom-login login-dailog\">\n                        <div className=\"  col-lg-6 login-form\">\n                            <form onSubmit={this.submitForm.bind(this)}>\n                                <div className={\"form-group mt-3 \".concat(!this.state.isValidated && this.state.email ===\"\" ? 'validate':'' )}>\n                                    <TextField  \n                                    onChange={(event) => {this.setState({email: event.target.value})}} \n                                    value = {this.state.email} \n                                    className = 'outlined-input-custom' \n                                    label=\"Email\" \n                                    type=\"email\"\n                                    variant=\"outlined\" \n                                    />\n                                </div>\n                                <div className={\"form-group mb-0 \".concat(!this.state.isValidated && this.state.password ===\"\" ? 'validate':'' )}>\n                                    <TextField \n                                    onChange={(event) => {this.setState({password: event.target.value})}} \n                                    value = {this.state.password} \n                                    className = 'outlined-input-custom' \n                                    label=\"Password\" \n                                    type=\"password\"   \n                                    variant=\"outlined\" \n                                    />\n                                    <span className=\"error ml-1\">{this.state.errors?.loginError && this.state.errors?.loginError[0]}</span>\n                                </div>\n                                <div className=\"form-group pt-4\">\n                                    <Link to = \"/passwordreset\" className=\"ForgetPwd\">Forget Password?</Link>\n                                </div>\n                                <div className=\"form-group custom-submit \">\n                                    <button className=\"btn btnSubmit\" type=\"submit\"><i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                \n                </div> \n            </div>\n        );\n    }\n}\n\nexport default SignIn;\n\n","import React from 'react';\nimport history from '../../utils/history';\nimport axios from 'axios';\nimport * as url from '../../utils/constant';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport './resend.scss';\n\ninterface ResendProps {\n    location?:any,\n}\ninterface ResendState {\n    code: string,\n    isSuccess:boolean,\n    successText:string,\n}\n\nclass Resend extends React.Component<ResendProps, ResendState> {\n\n    email = \"\"\n    state = {\n        code:\"\",\n        isSuccess:false,\n        successText:\"\",  \n    }\n    componentDidMount(){\n        let obj:any = history;\n        this.email = obj.location.state.email;\n    }\n    submitCode = (e:any) => {\n        e.preventDefault();\n        let that = this;\n        axios.post(url.confirmCodeUrl, {\n            key:this.state.code,              \n        }).then( (response)=> {\n            that.setState({\n                isSuccess:true,\n                successText:\"Verified Successfully\"\n            });\n            setTimeout(() => {\n                that.setState({\n                    isSuccess:false,\n                });\n                history.push(\"/success\");   \n            }, 2500);\n        })\n        .catch((error:any)=> {           \n            console.log(error.response.data);\n        })\n        .finally(()=> {\n\n        });           \n    }\n\n    resendCode = (e:any) => {\n        e.preventDefault();\n        let that = this;\n        axios.post(url.resendCodeUrl, {\n            email:this.email,\n        })\n        .then( (response)=> {\n            that.setState({\n                isSuccess:true,\n                successText:\"Code Resent Successfully\"\n            });\n\n            setTimeout(() => {\n                that.setState({\n                    isSuccess:false,                    \n                });\n            }, 2500);\n              \n        })\n        .catch((error:any)=> {\n            console.log(error.response.data);\n        })\n        .finally(()=> {\n\n        });           \n    } \n\n    render() {\n        return (\n            <div className=\"container login-container resend\">\n                <div className=\"align-items-center d-flex justify-content-center row custom-login\">\n                    <div className=\" col-lg-6 col-12  login-form\">\n                        <form onSubmit={this.submitCode.bind(this)}>\n                            <a>Please go to your email and verify the address you\n                            have used. If you do not see it check your junk folder.</a>\n                            <div className=\"form-group mt-5 mb-5\">\n                                <input type=\"text\"\n                                onChange={(event) => {this.setState({code: event.target.value});}}\n                                value={this.state.code} \n                                className=\"form-control\"\n                                 placeholder=\"Verification code\" \n                                />\n                            </div>\n                            <button className=\"resend-text mb-5\" onClick = {this.resendCode.bind(this)}>Resend</button>\n                            <div className=\"form-group custom-submit \">\n                                <button className=\"btn btnSubmit\" type=\"submit\">\n                                    <i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                                </button>                            \n                            </div>\n                            <SweetAlert\n                                success\n                                title={this.state.successText}\n                                onConfirm={()=>{}}\n                                onCancel={()=>{}}\n                                showConfirm = {false}\n                                show = {this.state.isSuccess}\n                            >                           \n                            </SweetAlert>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Resend;\n\n","import React from 'react';\nimport './success.scss';\nimport { Link } from 'react-router-dom';\n\ninterface SuccessProps {\n\n}\ninterface SuccessState {\n\n}\n\nclass Success extends React.Component<SuccessProps, SuccessState> {\n\n    render() {\n        return (\n            <div className=\"container login-container success mt-5\">\n                <div className=\"align-items-center d-flex justify-content-center row custom-login\">\n                    <div className=\"col-12 col-lg-6 success text-center\">\n                        <h3>Success!</h3>\n                        <p className=\"pt-4 pb-4\"> Now you will be taken to the speech<br />\n                            editor where you will need to Fill<br />\n                            in some additional information before you<br />\n                            can get started.</p>\n                        <Link to=\"/dashboard\">\n                            <button className=\"btn success-btn\">\n                            <a className=\"nav-link\"> Lets get started &nbsp;&nbsp;\n                            <i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                            </a>\n                        </button>\n                        </Link>\n                       \n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Success;\n\n","import React from 'react';\nimport * as url from '../../../utils/constant';\nimport axios from 'axios';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\n\ninterface UserAccessProps {\n\n}\ninterface UserAccessState {\n    email1: string,\n    email2: string,\n    email3: string,\n    isValidated: boolean,\n    isSuccess: boolean,\n    successMsg: string,\n    errorMsg:string,\n    btnText:string,\n}\n\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\nclass UserAccess extends React.Component<UserAccessProps, UserAccessState> {\n\n    state = {\n        email1: '',\n        email2: '',\n        email3: '',\n        isValidated: true,\n        isSuccess: false,\n        successMsg: '',\n        errorMsg:'',\n        btnText:'Add'\n    }\n\n    componentDidMount(){\n        this.retrieveEmails();\n    }\n\n    validateForm(): boolean {\n        if (this.state.email1 && this.state.email2 && this.state.email3) {\n            return true;\n        }\n        return false;\n    }\n\n    retrieveEmails =()=>{\n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}` }\n        };\n      \n        axios.get(url.closeContactsUrl,        \n            config\n            )\n            .then((response) => {\n                response.data.results && response.data.results.length>0 ?\n                  this.setState({btnText:\"Update\"})\n                : this.setState({btnText:\"Add\"});\n\n                this.setState({\n                    email1:response.data.results[0]['email1'],\n                    email2:response.data.results[0]['email2'],\n                    email3:response.data.results[0]['email3'],\n                });\n            \n            })\n            .catch((error) => {\n                \n            })\n            .finally( () => {\n            // always executed\n        });        \n    }\n\n    addCloseContacts = (e: any) => {\n        e.preventDefault();\n        let flag = this.validateForm();\n        this.setState({\n            isValidated: flag,\n        });\n        if (flag) {\n            this.setState({\n                isSuccess: true,\n            });\n\n            const config = {\n                headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n            };\n            const bodyParameters = {\n                email1: this.state.email1,\n                email2: this.state.email2,\n                email3: this.state.email3,\n            };\n\n            let that = this;\n            axios.post(url.closeContactsUrl,\n                bodyParameters,\n                config\n            )\n            .then((response) => {\n                    debugger;\n                    this.setState({\n                        isSuccess: false,\n                        successMsg: \"Emails Added Successfully\",\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            successMsg: \"\"\n                        });\n                    }, 2000);\n\n                })\n                .catch((error) => {\n                    this.setState({\n                        isSuccess: false,\n                        errorMsg: \"Enter valid email address in all 3 fields\",\n                    });\n                      setTimeout(() => {\n                        this.setState({\n                            errorMsg: \"\"\n                        });\n                    }, 2000);\n                })\n                .finally(() => {\n                    // always executed\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n                    <ClipLoader\n                        css={override}\n                        size={150}\n                        color={\"#123abc\"}\n                        loading={this.state.isSuccess}\n                    />\n                </div>\n                <div className=\"tabcontent\">\n                    <p>Add the email address’s of people you wish to allow access your <br /> speech, you need to add at least 3</p>\n                    <div className=\"form-group mb-0\">\n                        <input type=\"email\"\n                            onChange={(event) => { this.setState({ email1: event.target.value }) }}\n                            className={\"form-control \".concat(this.state.isValidated ? \"\" : \"validate\")}\n                            placeholder=\"Email 1\"\n                            value={this.state.email1} />\n\n                        <input type=\"email\"\n                            onChange={(event) => { this.setState({ email2: event.target.value }) }}\n                            className={\"form-control \".concat(this.state.isValidated ? \"\" : \"validate\")}\n                            placeholder=\"Email 2\"\n                            value={this.state.email2} />\n\n                        <input type=\"email\"\n                            onChange={(event) => { this.setState({ email3: event.target.value }) }}\n                            className={\"form-control \".concat(this.state.isValidated ? \"\" : \"validate\")}\n                            placeholder=\"Email 3\"\n                            value={this.state.email3} />                 \n                    </div>\n\n                    <div className=\"add-btn d-flex flex-column mt-4\">\n                        <span className=\"response-msg\">{this.state.successMsg}</span>\n                        <span className=\"response-msg error\">{this.state.errorMsg}</span>\n                        <a onClick={this.addCloseContacts.bind(this)}>+ {this.state.btnText}</a>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default UserAccess;\n\n\n\n","import React , {createRef} from 'react';\nimport * as url from '../../../utils/constant';\nimport axios from 'axios';\nimport DatePicker from 'react-mobile-datepicker';\nimport moment from 'moment';\nimport TextField from '@material-ui/core/TextField';\n\nimport './profile.scss';\n\ninterface ProfileProps {\n\n}\ninterface ProfileState {\n    email: string,\n    name: string,\n    dob: string,\n    time: Date,\n    isCalenderOpen: boolean,\n    old_password:string,\n    new_password1:string,\n    new_password2:string,\n    profile_picture:any,\n    file:any,\n    isPasswodChange:boolean,\n}\n\nconst monthMap = {\n    '1': 'January',\n    '2': 'February',\n    '3': 'March',\n    '4': 'April',\n    '5': 'May',\n    '6': 'June',\n    '7': 'July',\n    '8': 'August',\n    '9': 'September',\n    '10': 'October',\n    '11': 'November',\n    '12': 'December',\n};\nconst dateConfig = {\n   \n    'month': {\n        format: value => monthMap[value.getMonth() + 1],\n        caption: 'Mon',\n        step: 1,\n    },\n    'date': {\n        format: 'DD',\n        caption: 'Day',\n        step: 1,\n    },\n    'year': {\n        format: 'YYYY',\n        caption: 'Year',\n        step: 1,\n    },\n   \n};\n\n\n\nclass Profile extends React.Component<ProfileProps, ProfileState> {\n    private readonly inputOpenFileRef = createRef<HTMLInputElement>()\n\n    state = {\n        email: '',\n        name: '',\n        dob: '',\n        isCalenderOpen:false,\n        time:new Date(),\n        old_password:'',\n        new_password1:'',\n        new_password2:'',\n        profile_picture:null,\n        file:null,\n        isPasswodChange:false,\n    }\n\n    constructor(props){\n        super(props);\n        this.inputOpenFileRef = React.createRef()\n    }\n    componentDidMount(){\n         this.retrieveProfileInfo();\n    }\n\n\n    retrieveProfileInfo =()=>{\n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}` }\n        };\n      \n        axios.get(url.updateProfileUrl,        \n            config\n            )\n            .then((response) => {\n              let img = response.data[0]['profile_picture'] === null ? \"https://www.pinclipart.com/picdir/big/355-3553881_stockvader-predicted-adig-user-profile-icon-png-clipart.png\":\n                        response.data[0]['profile_picture'] ;\n              let dob = (response.data[0]['dob']) ? moment(response.data[0]['dob']).format('Do-MMMM-YYYY'):'';\n                this.setState({\n                    email:response.data[0]['email'],\n                    name:response.data[0]['name'],\n                    dob:dob,\n                    time:new Date(response.data[0]['dob']),\n                    profile_picture:img\n                });\n            \n            })\n            .catch((error) => {\n                \n            })\n            .finally( () => {\n            // always executed\n        });        \n    }\n\n    checkValue = (e) =>{\n        debugger;\n        if(e.target.value !=\"\"){\n            this.updateProfile();\n        }\n    }\n\n    updateProfile = () => {\n\n        var formData = new FormData();\n\n        this.state.file &&formData.append(\"profile_picture\", this.state.file);\n        formData.append(\"email\",this.state.email);\n        formData.append(\"dob\",moment(this.state.time).format('YYYY-MM-DD'));\n        formData.append(\"name\",this.state.name);\n       \n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n        };\n        \n        let that = this;\n        axios.post(url.updateProfileUrl,\n            formData,\n            config\n        )\n        .then((response) => {\n                \n            })\n            .catch((error) => {\n                \n            })\n            .finally(() => {\n                // always executed\n        });\n        \n    }\n\n\n    updatePassword = ()=>{\n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n        };\n\n        const bodyParameters = {\n            old_password:this.state.old_password,\n            new_password1:this.state.new_password1,\n            new_password2:this.state.new_password2\n         };\n        \n        axios.post(url.passwordChangeUrl,\n            bodyParameters,\n            config\n        )\n        .then((response) => {\n                \n        })\n        .catch((error) => {\n                \n        })\n        .finally(() => {\n                // always executed\n        });\n        \n    }\n\n    handleClick = () => {\n        this.setState({ isCalenderOpen: true });\n    }\n\n    handleCancel = () => {\n        this.setState({ isCalenderOpen: false });\n    }\n\n    handleSelect = (time) => {\n        let date = moment(time).format('Do-MMMM-YYYY');\n        this.setState({time: time, isCalenderOpen: false,dob:date },()=>{\n            this.updateProfile();\n        });\n    }\n\n    handleImageChange = (e) =>{\n        this.setState({\n            profile_picture: URL.createObjectURL(e.target.files[0]),\n            file:e.target.files[0],\n        },()=>{\n            this.updateProfile();\n        });\n    }\n\n\n\n\n    render() {\n        return (\n            <div  className=\"tabcontent profile-section\">\n            <div className=\"profile-img\">                \n                <img  src={this.state.profile_picture} />\n                <input type=\"file\" ref={this.inputOpenFileRef} className = \"d-none\"  onChange={this.handleImageChange.bind(this)}/>\n                &nbsp; &nbsp; &nbsp; &nbsp; <a onClick = {()=>{this.inputOpenFileRef.current.click()}} >Change</a>\n            </div>\n            <form className=\"form-group\">\n          \n                <div className=\"position-relative\">\n                     <TextField id=\"fullname\" \n                     onChange={(event) => {this.setState({name: event.target.value})}} \n                     value = {this.state.name} \n                     className = 'outlined-input-custom' \n                     label=\"Full Name\" \n                     variant=\"outlined\" \n                     />\n\n                </div>\n                \n          \n                 <div className=\"position-relative custom-input\">                   \n                    <TextField id=\"fullname\" \n                     onFocus={this.handleClick} \n                     value= {this.state.dob && this.state.dob} \n                     className = 'outlined-input-custom' \n                     label=\"Date of Birth\" \n                     variant=\"outlined\" \n                     />\n                   \n                    <DatePicker\n                    headerFormat = \"DD/MM/YYYY\"\n                     dateConfig={dateConfig}\n                     showHeader = {true}\n                     cancelText = \"Cancel\"\n                     confirmText = \"Ok\"\n                     value={this.state.time}\n                     isOpen={this.state.isCalenderOpen}\n                     onSelect={this.handleSelect}\n                     onCancel={this.handleCancel} />\n                </div>\n                <div className=\"position-relative custom-input\">\n                    <TextField  \n                      onChange={(event) => {this.setState({email: event.target.value})}} \n                     value={this.state.email}\n                     className = 'outlined-input-custom' \n                     label=\"Email\" \n                     type=\"email\"\n                     variant=\"outlined\" \n                     />\n                   \n                    {/* <a style= {{cursor:\"pointer\",zIndex:999}} onClick = {this.checkValue.bind(this)} className=\"profile-inputs input-inner-btn\">change</a> */}\n                </div>\n                <div className=\"position-relative custom-input\">\n                    <TextField \n                     onChange={(event) => {this.setState({old_password: event.target.value})}} \n                     onFocus = {()=>{this.setState({isPasswodChange:true})}}\n                     value={this.state.old_password}\n                     className = 'outlined-input-custom' \n                     label=\"Old Password\" \n                     type=\"password\"   \n                     variant=\"outlined\" \n                     />\n                    {/* <a style= {{cursor:\"pointer\",zIndex:999}} onClick= {this.updatePassword.bind(this)}className=\"profile-inputs input-inner-btn\">change</a> */}\n                </div>\n                {this.state.isPasswodChange && \n                <div>\n                    <div className=\"position-relative custom-input\">\n                        <TextField \n                        onChange={(event) => {this.setState({new_password1: event.target.value})}} \n                        value={this.state.new_password1} \n                        className = 'outlined-input-custom' \n                        label=\"New Password\" \n                        type=\"password\"   \n                        variant=\"outlined\" \n                        />\n                        {/* <a href=\"#\" className=\"profile-inputs input-inner-btn\">change</a> */}\n                    </div>\n                    <div className=\"position-relative custom-input\">\n                        <TextField \n                        onChange={(event) => {this.setState({new_password2: event.target.value})}} \n                        value={this.state.new_password2}\n                        className = 'outlined-input-custom' \n                        label=\"Re-enter Password\" \n                        type=\"password\"   \n                        variant=\"outlined\" \n                        />\n                        {/* <a style= {{cursor:\"pointer\",zIndex:999}} onClick = {this.checkValue.bind(this)}  className=\"profile-inputs input-inner-btn\">change</a> */}\n                    </div>\n                </div>\n                }\n               \n            </form>\n\n        </div>\n \n        );\n    }\n}\n\nexport default Profile;\n\n\n\n","import React from 'react';\nimport * as url from '../../../utils/constant';\nimport axios from 'axios';\n\n\ninterface SpeechProps {\n\n}\ninterface SpeechState {\n    speech:string,\n}\n\nclass Speech extends React.Component<SpeechProps, SpeechState> {\n    interval = null;\n    state = {\n        speech:'',\n    }\n\n    componentDidMount() {\n        this.retrieveSpeech();\n        this.interval = setInterval(() => this.addSpeech(), 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    retrieveSpeech = () => {\n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}` }\n        };\n      \n        axios.get(url.addRetrieveSpeechUrl,        \n            config\n        )\n        .then((response) => {\n            debugger;\n            this.setState({\n                speech:response?.data?.text\n            });     \n        })\n        .catch((error) => {\n            \n        })\n        .finally( () => {\n        // always executed\n        });        \n    }\n\n    addSpeech = () => {\n        if(this.state.speech.length>0){\n            const config = {\n                headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n            };\n            const bodyParameters = {\n                text:this.state.speech\n            };\n    \n            axios.patch(url.addRetrieveSpeechUrl,\n                bodyParameters,\n                config\n            )\n            .then((response) => {\n                    \n    \n            })\n            .catch((error) => {\n                    \n            })\n            .finally(() => {\n                    // always executed\n            });\n        }   \n    }\n\n    render() {\n        return (\n        <form>\n            <div className=\"form-group\">\n                <div className=\"custom-text-field\">\n                    <textarea rows={15}\n                    onChange = {(e)=>{this.setState({speech:e.target.value})}}\n                    value = {this.state.speech}\n                    placeholder=\"Start Typing\"></textarea>\n                </div>\n            </div>\n\n            <div className=\"form-group custom-submit \">\n                <button className=\"btn btnSubmit\" type=\"submit\">\n                    <i className=\"fa fa-spotify\" aria-hidden=\"true\"></i> &nbsp;\n                    <span>+ Spotify song</span>\n                </button>\n            </div>             \n        </form>\n        );\n    }\n}\n\nexport default Speech;\n\n\n\n","import React from 'react';\nimport { Collapse, CardBody, Card } from 'reactstrap';\nimport UserAccess from './UserAccess/UserAccess';\nimport * as url from '../../utils/constant';\nimport axios from 'axios';\nimport history from '../../utils/history';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\n\n\nimport './dashboard.scss';\nimport Profile from './Profile/Profile';\nimport Speech from './Speech/Speech';\n\ninterface DashboardProps {\n\n}\ninterface DashboardState {\n    activeTab:string,\n    activeBottomTab:string,\n    isOpen:boolean,\n    question:string,\n    answer:string,\n    showAnswerInput:boolean,\n    isSuccess:boolean,\n    msg:string,\n    questionsList:Array<object>\n    isValidated:boolean,\n}\n\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\n\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\n\nstate = {\n    activeTab: 'accesspage',\n    activeBottomTab:'Speech',\n    isOpen:false,\n    question:'',\n    answer:'',\n    showAnswerInput:false,\n    isSuccess:false,\n    msg:'',\n    questionsList:[{}],\n    isValidated:true,\n}\n\n\ntoggleActiveTab = (tab:string,e:any)=>{\n    if(tab === \"security\"){\n        this.retrieveSequrityQuestion();\n    }\n    this.setState({\n        activeTab : tab,\n    });\n   \n}\n\ntoggleBottomTabsHandler = (tabName:string,e:any) =>{\n    this.setState({\n        activeBottomTab:tabName\n    });\n}\n\ntoggleCollapse = (item:any,e:any)=>{\n    let data = this.state.questionsList;\n    data.map((obj:any)=>{\n        if(obj == item )\n            obj.showAnswer = !obj.showAnswer;\n    });\n    this.setState({\n        questionsList:data,\n    });\n}\n\nvalidateForm():boolean{ \n    if(this.state.answer && this.state.question){\n      return true;\n    }\n    return false;\n}\n\nretrieveSequrityQuestion =()=>{\n    const config = {\n        headers: { Authorization: `Token ${localStorage.getItem('userToken')}` }\n    };\n  \n    axios.get(url.secuirtyQuestionUrl,        \n        config\n        )\n        .then((response) => {\n            debugger;\n            response.data.results.map((item:any)=>{\n                item.showAnswer = false;\n            })\n            this.setState({\n              questionsList:response.data.results,\n            });\n        \n        })\n        .catch((error) => {\n            \n        })\n        .finally( () => {\n        // always executed\n    });        \n}\n\naddSecurityQuestion = (e:any) => {\n    e.preventDefault();\n    let flag = this.validateForm();\n    this.setState({\n        isValidated:flag,\n    });\n    if(flag){\n        this.setState({\n            isSuccess:true,\n        });\n    \n        const config = {\n            headers: { Authorization: `Token ${localStorage.getItem('userToken')}` }\n        };\n        const bodyParameters = {\n            answer:this.state.answer,\n            question:this.state.question,\n         };\n    \n        let that = this;\n        axios.post(url.secuirtyQuestionUrl, \n            bodyParameters,\n            config\n            )\n            .then((response) => {\n                debugger;\n                this.setState({\n                    isSuccess:false,\n                    showAnswerInput:false,\n                    msg:\"Question Added Successfully\",\n                    answer:\"\",\n                    question:\"\",\n                });\n                this.retrieveSequrityQuestion();\n                setTimeout(() => {\n                    this.setState({\n                        msg:\"\"\n                    });\n                }, 2000);\n    \n            })\n            .catch((error) => {\n                \n            })\n            .finally( () => {\n            // always executed\n        }); \n    }\n             \n}\n\nlogout = ()=> {\n    const config = {\n        headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n    };\n    const params = {};\n\n    axios.post(url.logoutUrl,\n        params,\n        config\n    )\n    .then((response) => {\n        localStorage.removeItem('userToken');\n        localStorage.removeItem('user');\n        history.push(\"/\");\n    })\n    .catch((error) => {\n            \n    })\n    .finally(() => {\n            // always executed\n    });\n    \n}\n\ndeleteAccount = ()=> {\n    const config = {\n        headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n    };\n    const bodyParameters = {\n     };\n    \n    axios.delete(url.deleteAccountUrl, \n        config\n    )\n    .then((response) => {\n        localStorage.removeItem('userToken');\n        history.push(\"/\");\n    })\n    .catch((error) => {\n            \n    })\n    .finally(() => {\n            // always executed\n    });\n    \n}\n\n\nrender() {\n\n return (\n    <div id=\"dashboard\" className=\"mb-5\">\n        <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n            <ClipLoader\n            css={override}\n            size={150}\n            //size={\"150px\"} this also works\n            color={\"#123abc\"}\n            loading={this.state.isSuccess}\n            />\n        </div>\n        <div className=\"container login-container tab-page mt-5 px-4 px-md-0\">\n            <div className=\"align-items-center d-flex justify-content-center row tabs-section custom-login\">               \n                <div className=\" col-12 col-lg-10 login-form mb-5 pb-5 tabs-card\">\n                    {this.state.activeBottomTab == \"Settings\"&&\n                        <div>\n                            <div className=\"col-md-3 float-left  pb-5 left-sec\">\n                                <div className=\"tab\">\n                                    <button className={\"tablinks \".concat(this.state.activeTab === \"accesspage\" ? 'active': '')} onClick={this.toggleActiveTab.bind(this,'accesspage')} id=\"defaultOpen\">Who can access<br/> my page</button>\n                                    <button className={\"tablinks \".concat(this.state.activeTab === \"security\" ? 'active': '')} onClick={this.toggleActiveTab.bind(this,'security')} >Security questions</button>\n                                    <button className={\"tablinks \".concat(this.state.activeTab === \"profile\" ? 'active': '')} onClick={this.toggleActiveTab.bind(this,'profile')} >Profile</button>\n                                    <button className={\"more-btn tablinks \".concat(this.state.activeTab === \"more\" ? 'active': '')} onClick={this.toggleActiveTab.bind(this,'more')} >More</button>\n                                \n                                </div>\n                            </div>\n    \n                            <div  className=\"col-md-9 float-left pb-5 content-sec \">\n                                {this.state.activeTab === \"accesspage\" ?\n                                    <UserAccess/>                              \n                                : this.state.activeTab === \"security\"?\n                                    <div  className=\"tabcontent second-content\">\n                                        <p className=\"pt-0\">Add questions that we will ask your loved ones when <br/>they try to access your speech</p>\n                                        <form>\n                                            <div className=\"form-group position-relative \">\n                                                <input type=\"text\" \n                                                    onChange={(event) => {this.setState({question: event.target.value})}}\n                                                    className={\"form-control \".concat(this.state.isValidated ? \"\" : \"validate\")}\n                                                    placeholder=\"Type your question\"\n                                                    value={this.state.question} \n                                                />\n                                                {this.state.showAnswerInput &&                                           \n                                                    <input type=\"text\"\n                                                    onChange={(event) => {this.setState({answer: event.target.value})}}\n                                                    className={\"form-control mt-3 \".concat(this.state.isValidated ? \"\" : \"validate\")}\n                                                    placeholder=\"Type your answer\"\n                                                    value={this.state.answer}\n                                                    />\n                                                }\n    \n                                                <a \n                                                onClick = {()=>{this.setState({showAnswerInput:!this.state.showAnswerInput})}} \n                                                className=\"input-inner-btn\">\n                                                    Answer\n                                                </a>\n                                                <span className=\"response-msg mt-2\">{this.state.msg}</span>   \n    \n                                            </div>\n                                            \n                                            <div className=\"mt-3 add-btn position-relative\">\n                                                <a onClick = {this.addSecurityQuestion.bind(this)}>+ Add</a>\n                                            </div>\n                                            <br/>\n                                            {this.state.questionsList && this.state.questionsList.map((item:any,i:number)=>\n                                                <div>\n                                                    <div className=\"d-flex align-items-baseline mb-2\">\n                                                        <div className={\"security-questions \".concat(i==0 ? \"mt-4\" : \"mt-3\")}>\n                                                            <span>{item.question}</span> \n                                                        </div>\n                                                        <i onClick={this.toggleCollapse.bind(this,item)} className=\"fa fa-plus-circle toggle-icon ml-4\" aria-hidden=\"true\"></i>                            \n                                                    </div>\n                                                        <Collapse isOpen={item.showAnswer} className=\"card-collapse\">\n                                                            <Card>\n                                                            <CardBody>\n                                                                    {item.answer}                        \n                                                            </CardBody>\n                                                            </Card>\n                                                    </Collapse>\n                                                </div>\n                                            )}\n                                            </form>\n                                    </div>\n                                : this.state.activeTab === \"profile\"?\n                                    <Profile/>\n                                :<div className = \"more-section\">\n                                    <div className=\"row\">\n                                        <div className = \"col-12 col-md-10 more-card d-flex flex-column align-content-center justify-content-center ml-5\">\n                                            <a onClick={this.logout.bind(this)} className=\"ml-2\">Logout<span> - You can sign back in at any time</span></a>\n                                        </div>\n                                        <div className = \"col-12 col-md-10 mt-4 more-card d-flex flex-column align-content-center justify-content-center ml-5\">\n                                            <a onClick={this.deleteAccount.bind(this)} className=\"ml-2\">Delete<span> - This will remove your account forever</span></a>\n                                        </div>\n                                        <div className = \"col-12 col-md-10 mt-4 more-card d-flex flex-column align-content-center justify-content-center ml-5\">\n                                            <a className=\"ml-2\">Contact us <span> - Get in touch if you need to speak to us about anything</span></a>\n                                        </div>\n                                    </div>\n                                </div>\n                            }   \n                        </div>               \n                        </div>                        \n                    }\n                    \n                    {this.state.activeBottomTab == \"Speech\" &&\n                        <div >\n                            <Speech/>\n                        </div>\n                    }                  \n                   <div className={\"after-section \".concat(this.state.activeBottomTab === \"Settings\" ? \"after-section-animate\": \"\" )}>\n                   </div>                  \n                </div>\n \n                <div className=\"col-8 d-flex upper-list\">\n                    <a style={{minWidth:\"130px\"}} className={this.state.activeBottomTab === \"Speech\" ? \"active\": \"\"} onClick={this.toggleBottomTabsHandler.bind(this,\"Speech\")}>My Speech</a>\n                    <a className={\"ml-4 \".concat(this.state.activeBottomTab === \"Settings\" ? \"active\": \"\" )} onClick={this.toggleBottomTabsHandler.bind(this,\"Settings\")} >Settings</a>\n                </div>\n        \n            </div>\n            \n        </div>\n    </div>\n    );\n  }\n}\n\nexport default Dashboard;\n\n","import React from 'react';\nimport history from '../../utils/history';\nimport axios from 'axios';\nimport * as url from '../../utils/constant';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport TextField from '@material-ui/core/TextField';\n\nimport './passwordreset.scss';\n\ninterface PasswordResetProps {\n\n}\ninterface PasswordResetState {\n    email:string,\n    password:string,\n    isValidated: boolean,\n    isSuccess:boolean,\n    errors:object,\n    formSubmitted:boolean,\n}\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\nclass PasswordReset extends React.Component<PasswordResetProps, PasswordResetState> {\n   \n    state = {\n        email:\"\",\n        password:\"\",\n        isValidated:true,\n        isSuccess:false,\n        formSubmitted:false,\n        errors: {\n            email: '',\n          }\n    }\n\n    validateForm():boolean{ \n        if(this.state.email){\n          return true;\n        }\n        return false;\n    }\n    \n    submitForm = (e:any) => {\n        e.preventDefault();\n        let flag = this.validateForm();\n        this.setState({\n            isValidated:flag,\n            formSubmitted:true,\n        });\n        if(flag){\n           let that = this;\n            axios.post(url.passwordResetUrl, {\n                email:this.state.email,\n              })\n              .then((response) => {\n                that.setState({\n                    isSuccess:true,\n                    formSubmitted:false,\n                    errors:{},\n                });\n\n                setTimeout(() => {\n                    that.setState({\n                        isSuccess:false,\n                    });\n                     history.push(\"/signin\");  \n                }, 5000);\n \n              })\n              .catch((error) => {\n                  let form_errors = {\n                    email:error.response?.data['email'],\n                  }\n                \n                  that.setState({\n                      errors:form_errors,\n                      formSubmitted:false,\n                  });\n              })\n              .finally( () => {\n                // always executed\n              });           \n        }\n  \n    }\n    \n    render() {\n        return (    \n            <div id= \"password-reset\">\n                <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n                    <ClipLoader\n                    css={override}\n                    size={150}\n                    //size={\"150px\"} this also works\n                    color={\"#123abc\"}\n                    loading={this.state.formSubmitted}\n                   />\n                </div>\n                <div  className={\"container-fluid login-container login-form \".concat(this.state.formSubmitted?\"screen-overlay\":\"\")}>             \n                    <div className=\"row background-images\">\n                            <div className=\"col-12 col-md-6 left-section-login position-relative\">\n                                <div className=\"col-3 first-div\"></div>\n                                <div className=\"col-3 second-div\"></div>\n                            </div>\n                            <div className=\"col-12 col-md-6 right-section-login p-0 position-relative\">\n                            <div className=\"col-3 third-div\"></div>\n                                <div className=\"col-3 fourth-div\"></div>\n                            </div>\n                        </div>\n                \n                    <div className=\"align-items-center d-flex justify-content-center row custom-login login-dailog\">\n                        <div className=\"  col-lg-6 login-form\">\n                            <form onSubmit={this.submitForm.bind(this)}>\n                                \n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.email ===\"\" ? 'validate':'' )}>\n                                    <p>\n                                        Enter your user account's verified email address and we will send you a password reset link.\n                                    </p>\n                                    <div className = \"pt-2\">  \n                                        <TextField \n                                        onChange={(event) => {this.setState({email: event.target.value})}} \n                                        value = {this.state.email} \n                                        className = 'outlined-input-custom' \n                                        label=\"Email\" \n                                        type=\"email\"\n                                        variant=\"outlined\" \n                                        />\n                                        <span className=\"error ml-1\">{this.state.errors?.email && this.state.errors?.email[0]}</span>   \n                                    </div>\n                                    </div>\n                              \n                                <div className=\"form-group custom-submit \">\n                                    <button className=\"btn btnSubmit\" type=\"submit\"><i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                                <SweetAlert\n                                        success                                     \n                                        title=\"Check your email for a link to reset your password.\"\n                                        onConfirm={()=>{}}\n                                        onCancel={()=>{}}\n                                        showConfirm = {false}\n                                        show = {this.state.isSuccess}\n                                >                                        \n                                </SweetAlert>\n                            </form>\n                        </div>\n                    </div>\n                \n                </div> \n            </div>\n        );\n    }\n}\n\nexport default PasswordReset;\n\n","import React from 'react';\nimport axios from 'axios';\nimport * as url from '../../utils/constant';\nimport history from '../../utils/history';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\nimport TextField from '@material-ui/core/TextField';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nimport './passwordresetconfirm.scss';\n\ninterface PasswordResetConfirmProps {\n    location?:any,\n}\ninterface PasswordResetConfirmState {\n    password1:string,\n    password2:string,\n    isValidated: boolean,\n    isSuccess:boolean,\n    errors:object,\n    formSubmitted:boolean,\n}\nconst override = css`\n  display: block;\n  position:absolute;\n  z-index:9999;\n  margin:0 auto;\n  border:5px solid;\n  border-color: #8600B5;\n  top:40%;\n`;\n\nclass PasswordResetConfirm extends React.Component<PasswordResetConfirmProps, PasswordResetConfirmState> {\n    \n    uid:any = \"\";\n    token:any = \"\";\n\n    state = {\n        password1:\"\",\n        password2:\"\",\n        isValidated:true,\n        isSuccess:false,\n        formSubmitted:false,\n        errors: {\n            new_password2: '',\n        }\n    }\n\n    componentDidMount(){\n        let params = new URLSearchParams(this.props?.location?.search);\n        this.uid = params.get(\"uidb64\")?.toString();\n        this.token =  params.get(\"token\")?.toString();\n    }\n\n    validateForm():boolean{ \n        if(this.state.password1 && this.state.password2){\n          return true;\n        }\n        return false;\n    }\n    \n    submitForm = (e:any) => {\n        e.preventDefault();\n        let flag = this.validateForm();\n        this.setState({\n            isValidated:flag,\n            formSubmitted:true,\n        });\n        if(flag){\n           let that = this;\n            axios.post(url.passwordResetConfirmUrl, {\n                uid:this.uid,\n                token:this.token,\n                new_password1:this.state.password1,\n                new_password2:this.state.password2,\n              })\n              .then((response) => {\n                that.setState({\n                    isSuccess:true,\n                    formSubmitted:false,\n                    errors:{},\n                });\n                setTimeout(() => {\n                    that.setState({\n                        isSuccess:false,\n                    });\n                     history.push(\"/signin\");  \n                }, 3000);\n\n              })\n              .catch((error) => {\n\n                  let form_errors = {\n                    new_password2:error.response?.data['new_password2'],\n                  }\n                \n                  that.setState({\n                      errors:form_errors,\n                      formSubmitted:false,\n                  });\n              })\n              .finally( () => {\n                // always executed\n              });           \n        }\n  \n    }\n    \n    render() {\n        return (    \n            <div id= \"password-reset-confirm\">\n                <div className=\"align-items-center d-flex justify-content-center sweet-loading\">\n                    <ClipLoader\n                    css={override}\n                    size={150}\n                    //size={\"150px\"} this also works\n                    color={\"#123abc\"}\n                    loading={this.state.formSubmitted}\n                   />\n                </div>\n                <div className={\"container-fluid login-container login-form \".concat(this.state.formSubmitted?\"screen-overlay\":\"\")}>             \n                    <div className=\"row background-images\">\n                            <div className=\"col-12 col-md-6 left-section-login position-relative\">\n                                <div className=\"col-3 first-div\"></div>\n                                <div className=\"col-3 second-div\"></div>\n                            </div>\n                            <div className=\"col-12 col-md-6 right-section-login p-0 position-relative\">\n                            <div className=\"col-3 third-div\"></div>\n                                <div className=\"col-3 fourth-div\"></div>\n                            </div>\n                        </div>\n                \n                    <div className=\"align-items-center d-flex justify-content-center row custom-login login-dailog\">\n                        <div className=\"pt-3 col-lg-6 login-form\">\n                            <form onSubmit={this.submitForm.bind(this)}>\n                                \n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.password1 ===\"\" ? 'validate':'' )}>\n                                    <TextField \n                                        onChange={(event) => {this.setState({password1: event.target.value})}} \n                                        value = {this.state.password1} \n                                        className = 'outlined-input-custom' \n                                        label=\"New Password\" \n                                        type=\"password\"   \n                                        variant=\"outlined\" \n                                    />\n                                    {/* <span className=\"error ml-1\">{this.state.errors?.loginError && this.state.errors?.loginError[0]}</span> */}\n                                </div>\n                                <div className={\"form-group \".concat(!this.state.isValidated && this.state.password2 ===\"\" ? 'validate':'' )}>\n                                     <TextField \n                                        onChange={(event) => {this.setState({password2: event.target.value})}} \n                                        value = {this.state.password2} \n                                        className = 'outlined-input-custom' \n                                        label=\"Confirm New Password\" \n                                        type=\"password\"   \n                                        variant=\"outlined\" \n                                    />\n                                    <span className=\"error ml-1\">{this.state.errors?.new_password2 && this.state.errors?.new_password2[0]}</span>\n                                </div>\n                                <div className=\"form-group custom-submit\">\n                                    <button className=\"btn btnSubmit\" type=\"submit\"><i className=\" fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                                <SweetAlert\n                                        success                                     \n                                        title=\"Password has been reset with the new password.\"\n                                        onConfirm={()=>{}}\n                                        onCancel={()=>{}}\n                                        showConfirm = {false}\n                                        show = {this.state.isSuccess}\n                                >                                        \n                                </SweetAlert>\n                            </form>\n                        </div>\n                    </div>\n                \n                </div> \n            </div>\n        );\n    }\n}\n\nexport default PasswordResetConfirm;\n\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { Route, Link,  Router } from 'react-router-dom';\nimport './routes.scss';\n\nimport Home from './../Home/Home';\nimport Navbar from './../Navbar/Navbar';\nimport history from \"../../utils/history\";\nimport SignUp from './../SignUp/SignUp';\nimport SignIn from './../SignIn/SignIn';\nimport Resend from './../Resend/Resend';\nimport Success from './../Success/Success';\nimport Dashboard from '../Dashboard/Dashboard';\nimport PasswordReset from '../PasswordReset/PasswordReset';\nimport PasswordResetConfirm from '../PasswordResetConfirm/PasswordResetConfirm';\nimport ReactGA from 'react-ga';\n\nconst trackingId = \"UA-158954661-1\";\nReactGA.initialize(trackingId);\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst Routes: React.FC = () => {\n  const [isSignUp,setIsSignUp] = useState(false);\n  const [isSignIn,setIsSignIn] = useState(false);\n  const [isRightBar,setIsRightBar] = useState(true);\n \n\n  return (\n    \n    <Router history={history}>\n      <div id=\"main-div\">\n        <Navbar isRightBar = {isRightBar} signUpNavBar = {isSignUp} signInNavBar = {isSignIn}/>   \n\n        <Route exact path='/' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");            \n                setIsSignUp(false);\n                setIsSignIn(false);\n                return(\n                  <Home  {...props}/>\n                )\n              }                     \n          }\n        />  \n\n        <Route exact path='/signup' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                setIsSignUp(true);\n                setIsSignIn(false);\n                return(\n                  <SignUp  {...props}/>\n                )\n              }\n            \n            }\n          }\n        /> \n\n        <Route exact path='/success' render={(props) =>\n            {\n\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n              setIsSignUp(true);\n              setIsSignIn(true);\n              setIsRightBar(false);\n              return(\n                <Success  {...props}/>\n              )\n            }else{\n              return(\n                <Redirect to=\"/signin\"/>\n               )\n            }\n          }\n          }\n        /> \n\n        <Route exact path='/dashboard' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                return(\n                  <Redirect to=\"/signin\"/>\n                 )\n              }            \n            }\n          }\n        /> \n\n\n        <Route exact path='/resend' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                setIsSignUp(true);\n                setIsSignIn(false);\n                return(\n                 <Resend  {...props}/>\n                )\n              }\n             \n            }\n          }\n        /> \n\n        <Route exact path='/signin' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                setIsSignIn(true);\n                setIsSignUp(false);\n                return(\n                  <SignIn  {...props}/>\n                 )\n              }\n             \n            }\n          }\n        />  \n        <Route exact path='/passwordreset' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                setIsSignIn(true);\n                setIsSignUp(false);\n                return(\n                  <PasswordReset  {...props}/>\n              )\n              }\n             \n            }\n          }\n        />  \n         <Route exact path='/password_reset_confirm' render={(props) =>\n            {\n              const loggedIn = localStorage.getItem(\"userToken\");\n              if(loggedIn && loggedIn.length>0){\n                setIsSignUp(true);\n                setIsSignIn(true);\n                setIsRightBar(true);\n                return(\n                 <Dashboard  {...props}/>\n                )\n              }else{\n                setIsSignIn(true);\n                setIsSignUp(false);\n                return(\n                  <PasswordResetConfirm  {...props}/>\n                )\n              }\n             \n            }\n          }\n        />  \n        \n      </div>\n    </Router>\n  )\n}\nexport default Routes;\n","import React from 'react';\nimport Routes from './Components/Routes/Routes';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst App: React.FC = () => {\n  \n  return ( \n        <Routes/>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/message.0663f006.svg\";","module.exports = __webpack_public_path__ + \"static/media/short_text.d4beaffc.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-large.5041a469.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove_red_eye.cbd11968.svg\";","module.exports = __webpack_public_path__ + \"static/media/offline_pin.1d026773.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_back.ff3b7c46.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ei-heart.f0900e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.23766812.svg\";"],"sourceRoot":""}